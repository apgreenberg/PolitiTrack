// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`My legislators tests Viewing the my legislators page 1`] = `
<RCTSafeAreaView
  emulateUnlessSupported={true}
>
  <View
    style={
      Object {
        "borderBottomWidth": 3,
        "height": 90,
      }
    }
  >
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignSelf": "center",
          "backgroundColor": "#dae8eb",
          "borderBottomWidth": 2,
          "borderColor": "#9ca7b8",
          "borderLeftWidth": 1,
          "borderRadius": 5,
          "borderRightWidth": 1,
          "borderTopWidth": 2,
          "height": "90%",
          "justifyContent": "center",
          "opacity": 1,
          "width": "90%",
        }
      }
      testID="customButton"
    >
      <Text
        style={
          Object {
            "fontSize": 24,
            "textAlign": "center",
          }
        }
      >
        Find My Legislators
      </Text>
    </View>
  </View>
  <View>
    <View
      style={
        Object {
          "marginBottom": 180,
        }
      }
    >
      <View
        style={Object {}}
      >
        <View
          style={
            Array [
              Object {
                "bottom": 0,
                "left": 0,
                "overflow": "hidden",
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 1,
              },
              Object {
                "height": 0,
                "width": 0,
              },
            ]
          }
        >
          <View
            leftActionActivated={false}
            leftActionState={false}
            rightActionActivated={false}
            rightActionState={false}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#9ca7b8",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
                "paddingLeft": 15,
              }
            }
            swipeAnimatedValue={0}
          >
            <View
              accessible={true}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "red",
                  "bottom": 0,
                  "justifyContent": "center",
                  "opacity": 1,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                  "width": 75,
                }
              }
              testID="deleteSwipeButton"
            >
              <Text
                style={
                  Object {
                    "color": "#FFF",
                  }
                }
              >
                Delete
              </Text>
            </View>
          </View>
        </View>
        <View
          manipulationModes={
            Array [
              "translateX",
            ]
          }
          onLayout={[Function]}
          onMoveShouldSetResponder={[Function]}
          onMoveShouldSetResponderCapture={[Function]}
          onResponderEnd={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderReject={[Function]}
          onResponderRelease={[Function]}
          onResponderStart={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          onStartShouldSetResponderCapture={[Function]}
          style={
            Object {
              "transform": Array [
                Object {
                  "translateX": 0,
                },
              ],
              "zIndex": 2,
            }
          }
        >
          <View
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#f0f0f0",
                "borderBottomColor": "#9ca7b8",
                "borderBottomWidth": 1,
                "height": 60,
                "justifyContent": "center",
              }
            }
            testID="mainSwipeButton"
          >
            <View>
              <Text
                style={
                  Object {
                    "fontSize": 16,
                    "textAlign": "center",
                  }
                }
              >
                Scott M. Bennett
              </Text>
            </View>
          </View>
        </View>
      </View>
      <View
        style={Object {}}
      >
        <View
          style={
            Array [
              Object {
                "bottom": 0,
                "left": 0,
                "overflow": "hidden",
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 1,
              },
              Object {
                "height": 0,
                "width": 0,
              },
            ]
          }
        >
          <View
            leftActionActivated={false}
            leftActionState={false}
            rightActionActivated={false}
            rightActionState={false}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#9ca7b8",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
                "paddingLeft": 15,
              }
            }
            swipeAnimatedValue={0}
          >
            <View
              accessible={true}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "red",
                  "bottom": 0,
                  "justifyContent": "center",
                  "opacity": 1,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                  "width": 75,
                }
              }
              testID="deleteSwipeButton"
            >
              <Text
                style={
                  Object {
                    "color": "#FFF",
                  }
                }
              >
                Delete
              </Text>
            </View>
          </View>
        </View>
        <View
          manipulationModes={
            Array [
              "translateX",
            ]
          }
          onLayout={[Function]}
          onMoveShouldSetResponder={[Function]}
          onMoveShouldSetResponderCapture={[Function]}
          onResponderEnd={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderReject={[Function]}
          onResponderRelease={[Function]}
          onResponderStart={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          onStartShouldSetResponderCapture={[Function]}
          style={
            Object {
              "transform": Array [
                Object {
                  "translateX": 0,
                },
              ],
              "zIndex": 2,
            }
          }
        >
          <View
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#f0f0f0",
                "borderBottomColor": "#9ca7b8",
                "borderBottomWidth": 1,
                "height": 60,
                "justifyContent": "center",
              }
            }
            testID="mainSwipeButton"
          >
            <View>
              <Text
                style={
                  Object {
                    "fontSize": 16,
                    "textAlign": "center",
                  }
                }
              >
                Carol Ammons
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RCTSafeAreaView>
`;
