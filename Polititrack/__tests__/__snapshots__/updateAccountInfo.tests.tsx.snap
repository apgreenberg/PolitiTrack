// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Tests the updatr account page Viewing the update account info page 1`] = `
<RCTSafeAreaView
  emulateUnlessSupported={true}
>
  <View
    style={
      Object {
        "paddingLeft": 10,
        "paddingRight": 10,
      }
    }
  >
    <View
      style={
        Object {
          "borderBottomWidth": 3,
          "paddingBottom": 10,
          "paddingTop": 10,
        }
      }
    >
      <Text
        style={
          Array [
            Object {
              "fontSize": 24,
              "textAlign": "center",
            },
            Object {
              "textAlign": "left",
            },
          ]
        }
      >
        Name
      </Text>
    </View>
    <View
      style={
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "justifyContent": "flex-start",
          "paddingTop": 10,
        }
      }
    >
      <TextInput
        allowFontScaling={true}
        onChangeText={[Function]}
        placeholder="default name"
        rejectResponderTermination={true}
        style={
          Object {
            "borderWidth": 2,
            "flexGrow": 1,
            "fontSize": 20,
            "height": 40,
          }
        }
        testID="nameInput"
        underlineColorAndroid="transparent"
      />
      <View
        style={
          Object {
            "paddingLeft": 10,
            "paddingRight": 10,
          }
        }
      >
        <View
          accessibilityRole="button"
          accessibilityState={
            Object {
              "disabled": true,
            }
          }
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
          testID="nameSaveButton"
        >
          <View
            style={
              Array [
                Object {},
                Object {},
              ]
            }
          >
            <Text
              disabled={true}
              style={
                Array [
                  Object {
                    "color": "#007AFF",
                    "fontSize": 18,
                    "margin": 8,
                    "textAlign": "center",
                  },
                  Object {
                    "color": "#cdcdcd",
                  },
                ]
              }
            >
              Save
            </Text>
          </View>
        </View>
      </View>
    </View>
    <View
      style={
        Object {
          "borderBottomWidth": 3,
          "paddingBottom": 10,
          "paddingTop": 10,
        }
      }
    >
      <Text
        style={
          Array [
            Object {
              "fontSize": 24,
              "textAlign": "center",
            },
            Object {
              "textAlign": "left",
            },
          ]
        }
      >
        Email
      </Text>
    </View>
    <View
      style={
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "justifyContent": "flex-start",
          "paddingTop": 10,
        }
      }
    >
      <TextInput
        allowFontScaling={true}
        onChangeText={[Function]}
        placeholder="ari.greenberg99@gmail.com"
        rejectResponderTermination={true}
        style={
          Object {
            "borderWidth": 2,
            "flexGrow": 1,
            "fontSize": 20,
            "height": 40,
          }
        }
        testID="emailInput"
        underlineColorAndroid="transparent"
      />
      <View
        style={
          Object {
            "paddingLeft": 10,
            "paddingRight": 10,
          }
        }
      >
        <View
          accessibilityRole="button"
          accessibilityState={
            Object {
              "disabled": true,
            }
          }
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
          testID="emailSaveButton"
        >
          <View
            style={
              Array [
                Object {},
                Object {},
              ]
            }
          >
            <Text
              disabled={true}
              style={
                Array [
                  Object {
                    "color": "#007AFF",
                    "fontSize": 18,
                    "margin": 8,
                    "textAlign": "center",
                  },
                  Object {
                    "color": "#cdcdcd",
                  },
                ]
              }
            >
              Save
            </Text>
          </View>
        </View>
      </View>
    </View>
    <View
      style={
        Object {
          "borderBottomWidth": 3,
          "paddingBottom": 10,
          "paddingTop": 10,
        }
      }
    >
      <Text
        style={
          Array [
            Object {
              "fontSize": 24,
              "textAlign": "center",
            },
            Object {
              "textAlign": "left",
            },
          ]
        }
      >
        Password
      </Text>
    </View>
    <View
      style={
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "justifyContent": "flex-start",
          "paddingTop": 10,
        }
      }
    >
      <View
        style={
          Object {
            "alignContent": "space-between",
            "flexDirection": "column",
            "flexGrow": 1,
          }
        }
      >
        <TextInput
          allowFontScaling={true}
          onChangeText={[Function]}
          rejectResponderTermination={true}
          secureTextEntry={true}
          style={
            Array [
              Object {
                "borderWidth": 2,
                "flexGrow": 1,
                "fontSize": 20,
                "height": 40,
              },
              Object {
                "marginBottom": 10,
              },
            ]
          }
          testID="passwordInput1"
          underlineColorAndroid="transparent"
        />
        <TextInput
          allowFontScaling={true}
          onChangeText={[Function]}
          rejectResponderTermination={true}
          secureTextEntry={true}
          style={
            Object {
              "borderWidth": 2,
              "flexGrow": 1,
              "fontSize": 20,
              "height": 40,
            }
          }
          testID="passwordInput2"
          underlineColorAndroid="transparent"
        />
        <Text>
          Passwords do not match.
        </Text>
      </View>
      <View
        style={
          Object {
            "flexShrink": 1,
            "paddingLeft": 10,
            "paddingRight": 10,
          }
        }
      >
        <View
          accessibilityRole="button"
          accessibilityState={
            Object {
              "disabled": true,
            }
          }
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
          testID="passwordSaveButton"
        >
          <View
            style={
              Array [
                Object {},
                Object {},
              ]
            }
          >
            <Text
              disabled={true}
              style={
                Array [
                  Object {
                    "color": "#007AFF",
                    "fontSize": 18,
                    "margin": 8,
                    "textAlign": "center",
                  },
                  Object {
                    "color": "#cdcdcd",
                  },
                ]
              }
            >
              Save
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RCTSafeAreaView>
`;
