// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Tests the Onboard Content list list renders correctly 1`] = `
<View
  style={
    Object {
      "marginBottom": 180,
    }
  }
>
  <View
    style={Object {}}
  >
    <View
      style={
        Array [
          Object {
            "bottom": 0,
            "left": 0,
            "overflow": "hidden",
            "position": "absolute",
            "right": 0,
            "top": 0,
            "zIndex": 1,
          },
          Object {
            "height": 0,
            "width": 0,
          },
        ]
      }
    >
      <View
        leftActionActivated={false}
        leftActionState={false}
        rightActionActivated={false}
        rightActionState={false}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#9ca7b8",
            "flex": 1,
            "flexDirection": "row",
            "justifyContent": "space-between",
            "paddingLeft": 15,
          }
        }
        swipeAnimatedValue={0}
      >
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#216ba3",
              "bottom": 0,
              "justifyContent": "center",
              "left": 0,
              "opacity": 1,
              "position": "absolute",
              "top": 0,
              "width": 75,
            }
          }
          testID="addSwipeButton"
        >
          <Text
            style={
              Object {
                "color": "#FFF",
              }
            }
          >
            Add
          </Text>
        </View>
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "red",
              "bottom": 0,
              "justifyContent": "center",
              "opacity": 1,
              "position": "absolute",
              "right": 0,
              "top": 0,
              "width": 75,
            }
          }
          testID="deleteSwipeButton"
        >
          <Text
            style={
              Object {
                "color": "#FFF",
              }
            }
          >
            Delete
          </Text>
        </View>
      </View>
    </View>
    <View
      manipulationModes={
        Array [
          "translateX",
        ]
      }
      onLayout={[Function]}
      onMoveShouldSetResponder={[Function]}
      onMoveShouldSetResponderCapture={[Function]}
      onResponderEnd={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderReject={[Function]}
      onResponderRelease={[Function]}
      onResponderStart={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      onStartShouldSetResponderCapture={[Function]}
      style={
        Object {
          "transform": Array [
            Object {
              "translateX": 0,
            },
          ],
          "zIndex": 2,
        }
      }
    >
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#f0f0f0",
            "borderBottomColor": "#9ca7b8",
            "borderBottomWidth": 1,
            "height": 60,
            "justifyContent": "center",
          }
        }
        testID="mainSwipeButton"
      >
        <View>
          <Text
            style={
              Object {
                "fontSize": 16,
                "textAlign": "center",
              }
            }
          >
            name1
          </Text>
        </View>
      </View>
    </View>
  </View>
  <View
    style={Object {}}
  >
    <View
      style={
        Array [
          Object {
            "bottom": 0,
            "left": 0,
            "overflow": "hidden",
            "position": "absolute",
            "right": 0,
            "top": 0,
            "zIndex": 1,
          },
          Object {
            "height": 0,
            "width": 0,
          },
        ]
      }
    >
      <View
        leftActionActivated={false}
        leftActionState={false}
        rightActionActivated={false}
        rightActionState={false}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#9ca7b8",
            "flex": 1,
            "flexDirection": "row",
            "justifyContent": "space-between",
            "paddingLeft": 15,
          }
        }
        swipeAnimatedValue={0}
      >
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#216ba3",
              "bottom": 0,
              "justifyContent": "center",
              "left": 0,
              "opacity": 1,
              "position": "absolute",
              "top": 0,
              "width": 75,
            }
          }
          testID="addSwipeButton"
        >
          <Text
            style={
              Object {
                "color": "#FFF",
              }
            }
          >
            Add
          </Text>
        </View>
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "red",
              "bottom": 0,
              "justifyContent": "center",
              "opacity": 1,
              "position": "absolute",
              "right": 0,
              "top": 0,
              "width": 75,
            }
          }
          testID="deleteSwipeButton"
        >
          <Text
            style={
              Object {
                "color": "#FFF",
              }
            }
          >
            Delete
          </Text>
        </View>
      </View>
    </View>
    <View
      manipulationModes={
        Array [
          "translateX",
        ]
      }
      onLayout={[Function]}
      onMoveShouldSetResponder={[Function]}
      onMoveShouldSetResponderCapture={[Function]}
      onResponderEnd={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderReject={[Function]}
      onResponderRelease={[Function]}
      onResponderStart={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      onStartShouldSetResponderCapture={[Function]}
      style={
        Object {
          "transform": Array [
            Object {
              "translateX": 0,
            },
          ],
          "zIndex": 2,
        }
      }
    >
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#f0f0f0",
            "borderBottomColor": "#9ca7b8",
            "borderBottomWidth": 1,
            "height": 60,
            "justifyContent": "center",
          }
        }
        testID="mainSwipeButton"
      >
        <View>
          <Text
            style={
              Object {
                "fontSize": 16,
                "textAlign": "center",
              }
            }
          >
            name2
          </Text>
        </View>
      </View>
    </View>
  </View>
  <View
    style={Object {}}
  >
    <View
      style={
        Array [
          Object {
            "bottom": 0,
            "left": 0,
            "overflow": "hidden",
            "position": "absolute",
            "right": 0,
            "top": 0,
            "zIndex": 1,
          },
          Object {
            "height": 0,
            "width": 0,
          },
        ]
      }
    >
      <View
        leftActionActivated={false}
        leftActionState={false}
        rightActionActivated={false}
        rightActionState={false}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#9ca7b8",
            "flex": 1,
            "flexDirection": "row",
            "justifyContent": "space-between",
            "paddingLeft": 15,
          }
        }
        swipeAnimatedValue={0}
      >
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#216ba3",
              "bottom": 0,
              "justifyContent": "center",
              "left": 0,
              "opacity": 1,
              "position": "absolute",
              "top": 0,
              "width": 75,
            }
          }
          testID="addSwipeButton"
        >
          <Text
            style={
              Object {
                "color": "#FFF",
              }
            }
          >
            Add
          </Text>
        </View>
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "red",
              "bottom": 0,
              "justifyContent": "center",
              "opacity": 1,
              "position": "absolute",
              "right": 0,
              "top": 0,
              "width": 75,
            }
          }
          testID="deleteSwipeButton"
        >
          <Text
            style={
              Object {
                "color": "#FFF",
              }
            }
          >
            Delete
          </Text>
        </View>
      </View>
    </View>
    <View
      manipulationModes={
        Array [
          "translateX",
        ]
      }
      onLayout={[Function]}
      onMoveShouldSetResponder={[Function]}
      onMoveShouldSetResponderCapture={[Function]}
      onResponderEnd={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderReject={[Function]}
      onResponderRelease={[Function]}
      onResponderStart={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      onStartShouldSetResponderCapture={[Function]}
      style={
        Object {
          "transform": Array [
            Object {
              "translateX": 0,
            },
          ],
          "zIndex": 2,
        }
      }
    >
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#f0f0f0",
            "borderBottomColor": "#9ca7b8",
            "borderBottomWidth": 1,
            "height": 60,
            "justifyContent": "center",
          }
        }
        testID="mainSwipeButton"
      >
        <View>
          <Text
            style={
              Object {
                "fontSize": 16,
                "textAlign": "center",
              }
            }
          >
            name2
          </Text>
        </View>
      </View>
    </View>
  </View>
  <View
    style={Object {}}
  >
    <View
      style={
        Array [
          Object {
            "bottom": 0,
            "left": 0,
            "overflow": "hidden",
            "position": "absolute",
            "right": 0,
            "top": 0,
            "zIndex": 1,
          },
          Object {
            "height": 0,
            "width": 0,
          },
        ]
      }
    >
      <View
        leftActionActivated={false}
        leftActionState={false}
        rightActionActivated={false}
        rightActionState={false}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#9ca7b8",
            "flex": 1,
            "flexDirection": "row",
            "justifyContent": "space-between",
            "paddingLeft": 15,
          }
        }
        swipeAnimatedValue={0}
      >
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#216ba3",
              "bottom": 0,
              "justifyContent": "center",
              "left": 0,
              "opacity": 1,
              "position": "absolute",
              "top": 0,
              "width": 75,
            }
          }
          testID="addSwipeButton"
        >
          <Text
            style={
              Object {
                "color": "#FFF",
              }
            }
          >
            Add
          </Text>
        </View>
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "red",
              "bottom": 0,
              "justifyContent": "center",
              "opacity": 1,
              "position": "absolute",
              "right": 0,
              "top": 0,
              "width": 75,
            }
          }
          testID="deleteSwipeButton"
        >
          <Text
            style={
              Object {
                "color": "#FFF",
              }
            }
          >
            Delete
          </Text>
        </View>
      </View>
    </View>
    <View
      manipulationModes={
        Array [
          "translateX",
        ]
      }
      onLayout={[Function]}
      onMoveShouldSetResponder={[Function]}
      onMoveShouldSetResponderCapture={[Function]}
      onResponderEnd={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderReject={[Function]}
      onResponderRelease={[Function]}
      onResponderStart={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      onStartShouldSetResponderCapture={[Function]}
      style={
        Object {
          "transform": Array [
            Object {
              "translateX": 0,
            },
          ],
          "zIndex": 2,
        }
      }
    >
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#f0f0f0",
            "borderBottomColor": "#9ca7b8",
            "borderBottomWidth": 1,
            "height": 60,
            "justifyContent": "center",
          }
        }
        testID="mainSwipeButton"
      >
        <View>
          <Text
            style={
              Object {
                "fontSize": 16,
                "textAlign": "center",
              }
            }
          >
            name2
          </Text>
        </View>
      </View>
    </View>
  </View>
</View>
`;
